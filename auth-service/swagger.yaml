openapi: 3.0.0
info:
  title: User Service API
  description: API documentation for user registration, login, and profile retrieval
  version: 1.0.0
servers:
  - url: 'http://localhost:5000'  # Adjust this to your server URL
paths:
  /users/register:
    post:
      summary: Register a new user
      description: Registers a new user with a username, password, and optional role.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "john_doe"
                password:
                  type: string
                  example: "password123"
                role:
                  type: string
                  example: "user"
              required:
                - username
                - password
      responses:
        201:
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User registered successfully."
        400:
          description: Missing required fields
        500:
          description: Internal server error

  /users/login:
    post:
      summary: Log in a user
      description: Logs in a user by verifying their username and password, then returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "john_doe"
                password:
                  type: string
                  example: "password123"
              required:
                - username
                - password
      responses:
        200:
          description: Login successful, returns JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwYmI4ZGI2ZDQ0ODc1MjdiZGFhZTVlOCIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNjMwNzI3NDE2fQ.6B89ErdmlDlB5Gb_RgUK7GPAE1Hmyts6oCuP3HLO80k"
        400:
          description: Missing required fields
        401:
          description: Invalid password
        404:
          description: User not found
        500:
          description: Internal server error

  /users/profile:
    get:
      summary: Get user profile
      description: Retrieve the logged-in user's profile (excluding the password).
      security:
        - bearerAuth: []
      responses:
        200:
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: "john_doe"
                  role:
                    type: string
                    example: "user"
        404:
          description: User not found
        500:
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
